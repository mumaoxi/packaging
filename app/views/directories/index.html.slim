=content_for :tab_title do
  '文件浏览'
end

header.mi-header
  h2
    - unless params[:root_path]
      span="#{@project[:label]}文件&nbsp;".html_safe
      span.glyphicon.glyphicon-chevron-down
    - else
      span 文件浏览
  .left.back
    span.glyphicon.glyphicon-menu-left 返回
  .right(data-href='/')
    span.glyphicon.glyphicon-home &nbsp;

- unless params[:root_path]
  .mi-top-menu#dir-projects-top-menu
    ul
      - @projects.values.each do |item|
        li(data-project=item[:name])
          =item[:label]
          - if params[:project]==item[:name]
            span.check.glyphicon.glyphicon-ok-circle
          -else
            span.check

=content_for :content do
  h5(data-root_path=@root_path data-extra_path="#{params[:extra_path]}" data-project=params[:project])
    span &nbsp;&nbsp;
    =path_split_links params[:extra_path]
  .panel.panel-default
    .panel-heading
      - unless params[:root_path]
        = link_to @project[:label], "/directories?project=#{@project[:name]}"
      - else
        '文件浏览

    table.table.table-hover
      - @directories.each do |item|
        tr
          td(data-item_path="#{params[:extra_path]}/#{item.name}" data-item_name=item.name)
            - if item.file?
              span.glyphicon.icon-file(class=file_icon_style(item.path)) &nbsp;
              a(href=directory_path(1)+"?root_path=#{@root_path}&extra_path=#{params[:extra_path]}/#{item.name}#{@project[:name]? ("&project="+@project[:name]): ''}")
                =item.name
              span &nbsp;
              small.text.text-gray
                =item.size.to_size
            -else
              span.glyphicon.glyphicon-folder-open.icon-dir &nbsp;
              a(href=directories_path+"?extra_path=#{params[:extra_path]}/#{item.name}#{@project[:name]? ("&project="+@project[:name]): ''}#{params[:root_path]? ("&root_path="+params[:root_path]): ''}")=item.name

            span.glyphicon.glyphicon-option-horizontal.pull-right.file-actions-btn.icon-file-item-action(data-item_path="#{params[:extra_path]}/#{item.name}" data-item_name=item.name)

footer.mi-footer

  button.mi-btn.mi-btn-large.mi-border-btn-danger#upload-file-btn
    span.glyphicon.glyphicon-upload 上传文件
    input.upload-file-input#upload-file-input(type='file')
  button.mi-btn.mi-btn-large.mi-border-btn-success#new-file-btn
    span.glyphicon.glyphicon-plus 创建


/选择文件类型的选择器
.mi-select#choose-filetype-select
  .select
    .header
      button.cancel 取消
      small.text-gray 选择文件类型
      button.confirm 确定
    .body
      ul
        li(data-value='dir' data-extra='文件夹')
          span.glyphicon.glyphicon-folder-open.icon-dir
          '&nbsp;&nbsp;文件夹
          span.check
        li(data-value='file' data-extra='文件')
          span.glyphicon.glyphicon-list-alt.icon-file
          '&nbsp;&nbsp;文件
          span.check.glyphicon.glyphicon-ok-circle

/新建文件对话框
.mi-input-dialog#new-file-dialog
  .dialog
    p.title
      span.glyphicon.glyphicon-list-alt.icon-file.file  文件
      span.glyphicon.glyphicon-folder-open.icon-dir.dir  文件夹
    .body
      input(placeholder='请输入文件(夹)名称')
    .footer
      button.cancel 取消
      button.confirm 确定

/重命名文件夹对话框
.mi-input-dialog#rename-dialog
  .dialog
    p.title 重命名
    .body
      input(placeholder='请输入新文件名')
    .footer
      button.cancel 取消
      button.confirm 确定

/文件修改对话框菜单
.mi-option-menu#file-actions-menu
  .body
    .header 目录
    button.mi-btn.mi-btn-large.mi-border-btn-danger.rename 重命名
    button.mi-btn.mi-btn-large.mi-btn-danger.delete 删除
    button.mi-btn.mi-btn-large.mi-border-btn-danger.cancel 取消